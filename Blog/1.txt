# 1. **css选择器** #
# 2. **伪类** #
# 3. **css 继承和层叠** #

------------
## css选择器 ##
1.**标签选择器**
以HTML标签作为选择器
通过标签选择器设置样式，即所有使用该标签的都会引用该样式：
```css
p{
	color: aquamarine;
}
```

2.**类选择器**
为HTML标签添加class属性
```HTML
<h1 class=red></h1>
```

通过类选择器为有此class属性设置样式

```css
.red{
	color:red
}
```

可为具有相同名称 不同类型元素设置不同规则
```css
p.red{
	font-size: 30px;
}
h1.red{
	font-size: 3.75rem;
}
```

3.**ID选择器**
为HTML标签添加ID属性
```HTML
<h1 id="ex"></h1>
<p id="test"></p>
```

通过ID选择器为此ID设置规则
<font color=#0099ff >**一个ID只能对应一个标签 区分大小写**</font>
```css
#ex{
	color:aqua
}
#test{
	font-size:40px
}
```

4.**群组选择器**

当多个标签使用相同规则时，使用群组选择器
```css
p,h1,div,a,li{
	color:aqua
	font-family:"宋体"
}
```


5.**全局选择器**

为所有标签设置样式
```css
*{
	font-size：80px
}
```

6.**后代选择器**
```HTML
<ul>
	<li></li>
	<li id=li2><a href=""></a></li>
	<li class=red><p></p></li>
<ul>
```
使用后代选择器设置 后代之间用空格隔开
```css
ul li{ 	 		/*ul标签中的li标签*/
	color:blue
}
#li2 a{			 /*id为il2标签中的a标签*/
	font-size:20px
}
ul li.red p{		/*ul标签中的class为red的li标签中的p标签*/
	color:red
}
```

## 伪类 ##
1. **伪类选择器**
<font color=chocolate>定义特殊形态下的样式
	不能用标签，id或class等其他属性实现</font>
2. **连接伪类**
链接的四种状态：
伪类| :link| :visited|:hover| :active
:-: | :-: | :-: | :-: | :-:
代表| 未访问的链接 | 已访问的链接 | 鼠标悬停状态| 点中的链接|

示例
```HTML
<head>
	<meta charset="UTF-8">
	<title>css选择器</title>
	<style type="text/css">
		 a:link{color:blue;}      /*连接平时的状态 */
		 a:visited{color:green;}  /*被访问过了*/
		 a:hover{color:red;}      /*鼠标放到连接上时*/
		 a:active{color:gray;}    /*鼠标按下去时*/
	</style>
</head>
<body>
	<a href="47.107.246.149：8081">主页</a>
</body>
```


3. **伪类的顺序**
<font color=lightseagreen>:link→:visited→:hover→:active</font>


